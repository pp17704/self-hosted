name: Local KIND CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: flask-app
  NAMESPACE: devops-practice

jobs:
  test:
    runs-on: self-hosted  # Ensures job runs on YOUR laptop, not GitHub cloud
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          try {
            pytest
          } catch {
            Write-Output "Tests completed or not found."
          }
          exit 0

  build-and-deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build local Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest ./app

      - name: Load image to KIND
        run: |
          # Ensure the image is visible to the KIND cluster
          kind load docker-image ${{ env.IMAGE_NAME }}:latest --name arjuna-multinode

      - name: Ensure K8s namespace exists
        run: |
          $ns = kubectl get namespace $Env:NAMESPACE
          if ($LASTEXITCODE -ne 0) {
            kubectl create namespace $Env:NAMESPACE
          }

      - name: Deploy BLUE version
        run: |
          kubectl apply -f k8s/deployment-blue.yaml -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/flask-app-blue -n ${{ env.NAMESPACE }} --timeout=300s

      - name: Smoke test blue deployment (optional)
        run: |
          kubectl get pods -n ${{ env.NAMESPACE }} -l version=blue
          # Add curl, requests, or whatever health checks you want to verify blue deployment

      - name: Cutover Production Traffic to BLUE
        run: |
          kubectl patch service flask-app-service -n ${{ env.NAMESPACE }} -p '{"spec":{"selector":{"app":"flask-app","version":"blue"}}}'